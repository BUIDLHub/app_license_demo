{
  "contractName": "LicenseMain",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "_licenseID",
          "type": "uint256"
        }
      ],
      "name": "generatePermissionHash",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_holder",
          "type": "address"
        },
        {
          "name": "_productID",
          "type": "uint256"
        },
        {
          "name": "_specID",
          "type": "uint256"
        }
      ],
      "name": "userHasValidLicense",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_holder",
          "type": "address"
        },
        {
          "name": "_productID",
          "type": "uint256"
        },
        {
          "name": "_specID",
          "type": "uint256"
        }
      ],
      "name": "findLicenseID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_holder",
          "type": "address"
        },
        {
          "name": "_licenseID",
          "type": "uint256"
        },
        {
          "name": "v",
          "type": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "verifyLicense",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_productID",
          "type": "uint256"
        },
        {
          "name": "_specID",
          "type": "uint256"
        }
      ],
      "name": "issueLicense",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_erc721",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "productID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "specID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "licenseID",
          "type": "uint256"
        }
      ],
      "name": "LicenseIssued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "productID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "specID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "attributes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "SpecsRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "registerVendor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "registerProduct",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_productID",
          "type": "uint256"
        },
        {
          "name": "_attributes",
          "type": "uint256"
        },
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_price",
          "type": "uint256"
        },
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "registerLicenseSpecs",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_vendorId",
          "type": "uint256"
        }
      ],
      "name": "vendorName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_prodID",
          "type": "uint256"
        }
      ],
      "name": "productInfo",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_productID",
          "type": "uint256"
        },
        {
          "name": "_specID",
          "type": "uint256"
        }
      ],
      "name": "licenseSpecsInfo",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_licenseID",
          "type": "uint256"
        }
      ],
      "name": "licenseInfo",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_productID\",\"type\":\"uint256\"},{\"name\":\"_attributes\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"registerLicenseSpecs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_licenseID\",\"type\":\"uint256\"}],\"name\":\"licenseInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"_licenseID\",\"type\":\"uint256\"}],\"name\":\"generatePermissionHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_productID\",\"type\":\"uint256\"},{\"name\":\"_specID\",\"type\":\"uint256\"}],\"name\":\"userHasValidLicense\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_productID\",\"type\":\"uint256\"},{\"name\":\"_specID\",\"type\":\"uint256\"}],\"name\":\"findLicenseID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_licenseID\",\"type\":\"uint256\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"verifyLicense\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_vendorId\",\"type\":\"uint256\"}],\"name\":\"vendorName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"registerProduct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_productID\",\"type\":\"uint256\"},{\"name\":\"_specID\",\"type\":\"uint256\"}],\"name\":\"licenseSpecsInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_prodID\",\"type\":\"uint256\"}],\"name\":\"productInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"registerVendor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_productID\",\"type\":\"uint256\"},{\"name\":\"_specID\",\"type\":\"uint256\"}],\"name\":\"issueLicense\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_erc721\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"productID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"specID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"licenseID\",\"type\":\"uint256\"}],\"name\":\"LicenseIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"productID\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"specID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"attributes\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"SpecsRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"details\":\"init initializes the license management contract with an initial root vendor/product owned by the contract owner.\"},\"findLicenseID(address,uint256,uint256)\":{\"details\":\"find a license ID held by the given address for the given product and license specification IDs. A non-zero return value indicates the user holds a license for the items, but the license needs to be verified for expiration, etc.\"},\"generatePermissionHash(address,uint256)\":{\"details\":\"generatePermissionHash generates a unique hash that must be signed by the given user to verify license ownership.\",\"params\":{\"_licenseID\":\"is the license id that will be verified\",\"user\":\"is the user that will sign the returned hash\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"issueLicense(uint256,uint256)\":{\"details\":\"issue a new license for the caller for the given product based on the given license specification.\",\"params\":{\"_productID\":\"is the product id for which a license is being issued\",\"_specID\":\"is the specification for the license being purchased\"}},\"licenseInfo(uint256)\":{\"details\":\"get license product ID, attributes, expiration, and issued block based on its id\",\"params\":{\"_licenseID\":\"is the license id to query\"}},\"licenseSpecsInfo(uint256,uint256)\":{\"details\":\"get license specification information based on its product and spec IDs\",\"params\":{\"_productID\":\"is the id for the product that owns the spec\",\"_specID\":\"is the license spec id\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"productInfo(uint256)\":{\"details\":\"Get product vendor, spec count, license count, and name registered with the given id\",\"params\":{\"_prodID\":\"is product id\"}},\"registerLicenseSpecs(uint256,uint256,string,uint256,uint256)\":{\"details\":\"register new license specs for a product. Caller must be a registered vendor that owns the given product.\"},\"registerProduct(string)\":{\"details\":\"register a new product. Caller must be a valid vendor address.\"},\"registerVendor(string)\":{\"details\":\"register a new vendor with the contract. Throws if address already registered as vendor.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"userHasValidLicense(address,uint256,uint256)\":{\"details\":\"check whether the given user has a valid license for the given product and specification IDs. NOTE: This does not authenticate the given address and only verifies that the address as an unexpired license for the given IDs. To authenticate user access, use the verifyLicense function instead.\"},\"vendorName(uint256)\":{\"details\":\"get the name of a vendor by its id.\",\"params\":{\"_vendorId\":\"is registered vendor id\"}},\"verifyLicense(address,uint256,uint8,bytes32,bytes32)\":{\"details\":\"verify that an address, who signed the given token hash, owns a license for the given product/spec id combination. This will also verify that the license has not expired.\",\"params\":{\"_holder\":\"is the address to verify which must have also signed the given token\",\"_licenseID\":\"is the license ID to verify\",\"r\":\"is part of sig\",\"s\":\"is part of sig\",\"v\":\"is part of sig\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/LicenseMain.sol\":\"LicenseMain\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/LicenseMain.sol\":{\"keccak256\":\"0x4c2051cc9e2f0a3ebbfde147a9744c31bfe2622687a7f6cf223689d880d7d796\",\"urls\":[\"bzzr://6f6fdc0844a640d3931013a7521328d679da553731e28ff716067e288a52780f\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/LicenseManager.sol\":{\"keccak256\":\"0xa6288f487f0cadd66fd1c08a286a90a1136031367711f46babf8a85bba64e25d\",\"urls\":[\"bzzr://604a59c4d673d7404239ce228d344adc8076f52e092fd0c52445ebe2b21400fe\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/LicenseToken.sol\":{\"keccak256\":\"0xb076fabef99f01534c643b8b8721b80f46fe73f6da6a6c30ac483cb9ad2505e3\",\"urls\":[\"bzzr://fe8c69b4ebee3b7742c9a39fc4302fe38a2064e18d990baa8a577f430e7f2f2c\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/libraries/LicenseLogic.sol\":{\"keccak256\":\"0x6d08ae294399de7e5564f365eabf7262497fc9d9ef3e228a7cdb517b72738bd4\",\"urls\":[\"bzzr://877bc94eb2964b16d10d63c73446cd840be1075e5eaa9a6542ecd2e73547b1cb\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/libraries/LicenseStorage.sol\":{\"keccak256\":\"0x1f433f190324dcef41550b167e633e8b4024b8a9f27747e451d2142a3b957b03\",\"urls\":[\"bzzr://acb8e0c6e9fcd18108435055e9e5996dd57b4ee66b038ac08b29d2182a6b7bfc\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x63da54a7a5d4e4d82ac8d1f4f7f995fd8ef2b5fe1f2960b83e534fa37fb60910\",\"urls\":[\"bzzr://cea53b805426e40efadb24f2613aca39182462e9ecd23fde7aacf0c4b5885aaf\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xac2eacd7e7762e275442f28f21d821544df5aae2ed7698af13be8c41b7005e2e\",\"urls\":[\"bzzr://43e901f6f210568ebc1d3591da3ce6a9d10796b854767a9c6e3da10305a8a332\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x661553e43d7c4fbb2de504e5999fd5c104d367488350ed5bf023031bd1ba5ac5\",\"urls\":[\"bzzr://fc2ba15143ce3a00268ecd15fc98eb2469b18bfe27a64bbab0ac6446f161c739\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzzr://a7dfb6fc259d0074da840a848461487567e2a6309105dd5c050a4e025f0fa7cb\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzzr://d12a11272051eb6586de8f7e0a82c04a98c9984ce8b2a6cf1ee439f65aba29a9\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xf151df411bbf4eaef1fc8e8480cd10c2cd985f1a36517e63981517610213efc1\",\"urls\":[\"bzzr://9bca20c0c1208be8f31fc7a73faccd2fca4c5f84dc0a432ae2e066970551db34\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xb42cb5a7471d98114af8f7050e7d08dfd543f432713a8aee72a45ce9485f5bed\",\"urls\":[\"bzzr://b0d4d8eb319d67dc4b5def23d48a84806dcd6492782c176309da449903e58766\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x908d0d6fd8d30cffb1fe9fce1f7db6802cb885fbe88d2f170539e8dcc6afa946\",\"urls\":[\"bzzr://691f4df66b5aa95410d8205f7afcd90e5f066d13513392ab797b2c9ce2f4f669\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe5e28b1a405164faa98f8ecd8ed2b00907b89e3d58b2b2bb8ac8b12bc5714489\",\"urls\":[\"bzzr://5a804c3710e9eca0a111db4536b0c5d23bf4a66734a9856f3df2992900ed8f28\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/token/ERC721/ERC721Mintable.sol\":{\"keccak256\":\"0x4c77825e3ce795c18c96af2985f702eff03dc660b25026b2754d90b64058f6ab\",\"urls\":[\"bzzr://3e8f76912935d64c6cf6b3209cb81858c3abea8b91fca68a7bfd1a005fdefd42\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xce48937a8007c580b8e2e35705738c922dd17540de89ebee6df06d2917a3f9fc\",\"urls\":[\"bzzr://de494d3843e2c151aa108782382720b5d9f4531f0aa620a4244ca12fc1f8a780\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzzr://8f483b76debd9f5948c445dcb83dac4c8b4881218776a6cd43ca07bd62f647de\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzzr://b89c69b072072e7fa1c8da973f82c7b28a64fb6bdc1e47626fedc89050ae783c\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076\"]},\"/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c80636cbe760d1161008a578063bb119f6e11610059578063bb119f6e14610731578063e538109a146107fa578063ea0f543b146108c2578063f2fde38b146108fa576100f3565b80636cbe760d146105c1578063715018a6146106945780638da5cb5b146106ab5780638f32d59b14610702576100f3565b80633e34cf0a116100c65780633e34cf0a1461033857806340791f3a146103b1578063517497da14610445578063660930e8146104f9576100f3565b8063056df274146100f85780631e084558146101e857806332342b7f1461024c5780633bba1451146102bb575b600080fd5b34801561010457600080fd5b506101e6600480360360a081101561011b57600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561014c57600080fd5b82018360208201111561015e57600080fd5b8035906020019184600183028401116401000000008311171561018057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291908035906020019092919050505061094b565b005b3480156101f457600080fd5b506102216004803603602081101561020b57600080fd5b810190808035906020019092919050505061096e565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b34801561025857600080fd5b506102a56004803603604081101561026f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610997565b6040518082815260200191505060405180910390f35b3480156102c757600080fd5b5061031e600480360360608110156102de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610cf8565b604051808215151515815260200191505060405180910390f35b34801561034457600080fd5b5061039b6004803603606081101561035b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610f9a565b6040518082815260200191505060405180910390f35b3480156103bd57600080fd5b5061042b600480360360a08110156103d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061120e565b604051808215151515815260200191505060405180910390f35b34801561045157600080fd5b5061047e6004803603602081101561046857600080fd5b8101908080359060200190929190505050611836565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104be5780820151818401526020810190506104a3565b50505050905090810190601f1680156104eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561050557600080fd5b506105bf6004803603602081101561051c57600080fd5b810190808035906020019064010000000081111561053957600080fd5b82018360208201111561054b57600080fd5b8035906020019184600183028401116401000000008311171561056d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611853565b005b3480156105cd57600080fd5b50610604600480360360408110156105e457600080fd5b81019080803590602001909291908035906020019092919050505061186a565b6040518085815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561065657808201518184015260208101905061063b565b50505050905090810190601f1680156106835780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156106a057600080fd5b506106a9611898565b005b3480156106b757600080fd5b506106c06119d1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561070e57600080fd5b506107176119fa565b604051808215151515815260200191505060405180910390f35b34801561073d57600080fd5b5061076a6004803603602081101561075457600080fd5b8101908080359060200190929190505050611a51565b6040518085815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156107bc5780820151818401526020810190506107a1565b50505050905090810190601f1680156107e95780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561080657600080fd5b506108c06004803603602081101561081d57600080fd5b810190808035906020019064010000000081111561083a57600080fd5b82018360208201111561084c57600080fd5b8035906020019184600183028401116401000000008311171561086e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a7b565b005b6108f8600480360360408110156108d857600080fd5b810190808035906020019092919080359060200190929190505050611a92565b005b34801561090657600080fd5b506109496004803603602081101561091d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b98565b005b61096785858585856001611c1e9095949392919063ffffffff16565b5050505050565b600080600080610988856001611f6f90919063ffffffff16565b93509350935093509193509193565b6000808211610a0e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c6964204c6963656e7365204944000000000000000000000000000081525060200191505060405180910390fd5b60006001600601600084815260200190815260200160002090506000816000015411610aa2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f556e6b6e6f776e206c6963656e7365000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160070160008360000154815260200190815260200160002090506000816000015411610b3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e726567697374657265642050726f6475637400000000000000000000000081525060200191505060405180910390fd5b60008160040160008460010154815260200190815260200160002090508060030160009054906101000a900460ff16610bdb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6b6e6f776e206c6963656e7365207370656300000000000000000000000081525060200191505060405180910390fd5b60008160050160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905085816000015414610c7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180613363603a913960400191505060405180910390fd5b600081600101549050878782604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018381526020018281526020019350505050604051602081830303815290604052805190602001209550505050505092915050565b6000803073ffffffffffffffffffffffffffffffffffffffff16633e34cf0a8686866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060206040518083038186803b158015610d8857600080fd5b505afa158015610d9c573d6000803e3d6000fd5b505050506040513d6020811015610db257600080fd5b810190808051906020019092919050505090506000811415610e3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f206c6963656e736520666f756e640000000000000000000000000000000081525060200191505060405180910390fd5b6000811415610e4f576000915050610f93565b6000600160060160008381526020019081526020016000209050600081600001541415610ee4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c6964206c6963656e7365000000000000000000000000000000000081525060200191505060405180910390fd5b600081600001541415610efc57600092505050610f93565b42816002015411610f75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4c6963656e73652065787069726564000000000000000000000000000000000081525060200191505060405180910390fd5b4281600201541115610f8c57600092505050610f93565b6001925050505b9392505050565b6000808311611011576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e76616c69642070726f64756374204944490000000000000000000000000081525060200191505060405180910390fd5b60008211611087576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642073706563204944000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160070160008581526020019081526020016000209050600081600001541161111b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e726567697374657265642070726f6475637400000000000000000000000081525060200191505060405180910390fd5b600081600401600085815260200190815260200160002090508060030160009054906101000a900460ff166111b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642073706563204944000000000000000000000000000000000081525060200191505060405180910390fd5b60008160050160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806000015493505050509392505050565b6000808511611285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c6964206c6963656e7365204944000000000000000000000000000081525060200191505060405180910390fd5b60006001600601600087815260200190815260200160002090506000816000015411611319576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c6964206c6963656e7365204944000000000000000000000000000081525060200191505060405180910390fd5b60006001600701600083600001548152602001908152602001600020905060008160000154116113b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f556e6b6e6f776e2050726f64756374000000000000000000000000000000000081525060200191505060405180910390fd5b60008160040160008460010154815260200190815260200160002090508060030160009054906101000a900460ff16611452576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6b6e6f776e204c6963656e7365205370656300000000000000000000000081525060200191505060405180910390fd5b60008160050160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154116114f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604681526020018061339d6046913960600191505060405180910390fd5b60006115008b8b610997565b905060606040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525090506000600182846040516020018083805190602001908083835b602083106115785780518252602082019150602081019050602083039250611555565b6001836020036101000a03801982511681845116808217855250505050505090500182815260200192505050604051602081830303815290604052805190602001208c8c8c60405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611614573d6000803e3d6000fd5b5050506020604051035190508c73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f496e76616c6964207369676e617475726500000000000000000000000000000081525060200191505060405180910390fd5b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e8e6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561173657600080fd5b505afa15801561174a573d6000803e3d6000fd5b505050506040513d602081101561176057600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117b75760009850505050505050505061182d565b6000600160060160008f81526020019081526020016000209050600081600201541180156117e85750428160020154105b156117ff576000995050505050505050505061182d565b6118176001876001015461216490919063ffffffff16565b8660010181905550600199505050505050505050505b95945050505050565b606061184c8260016121ec90919063ffffffff16565b9050919050565b61186781600161232390919063ffffffff16565b50565b600080600060606118878686600161256a9092919063ffffffff16565b935093509350935092959194509250565b6118a06119fa565b611912576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60008060006060611a6c85600161284f90919063ffffffff16565b93509350935093509193509193565b611a8f816001612a2090919063ffffffff16565b50565b6000611aac8383346001612c45909392919063ffffffff16565b9050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611b5757600080fd5b505af1158015611b6b573d6000803e3d6000fd5b505050506040513d6020811015611b8157600080fd5b810190808051906020019092919050505050505050565b611ba06119fa565b611c12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611c1b81613090565b50565b60008511611c94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c69642050726f64756374204944000000000000000000000000000081525060200191505060405180910390fd5b611c9e86336131d4565b611d10576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4e6f74206120726567697374657265642076656e646f7200000000000000000081525060200191505060405180910390fd5b60008660050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000876007016000888152602001908152602001600020905080600001548214611de8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4e6f742070726f64756374206f776e657200000000000000000000000000000081525060200191505060405180910390fd5b611e006001826001015461216490919063ffffffff16565b81600101819055506000816001015490506040518060a001604052808681526020018881526020018581526020016001151581526020018781525082600401600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055506080820151816004019080519060200190611eaa929190613222565b5090505080887f2e11fd987fb0d47c66d2c22d51781a9a0d68b11ab597275fe27b485af1c3ea86898989896040518085815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015611f27578082015181840152602081019050611f0c565b50505050905090810190601f168015611f545780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a3505050505050505050565b60008060008060008511611feb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c6964204c6963656e7365204944000000000000000000000000000081525060200191505060405180910390fd5b60008660060160008781526020019081526020016000209050600081600101541161207e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c6964206c6963656e7365204944000000000000000000000000000081525060200191505060405180910390fd5b600087600701600083600001548152602001908152602001600020905060008160040160008460010154815260200190815260200160002090508060030160009054906101000a900460ff1661213c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c6964204c6973656e7365204944000000000000000000000000000081525060200191505060405180910390fd5b8260000154816001015484600201548560030154965096509650965050505092959194509250565b6000808284019050838110156121e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b606060008211612264576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f496e76616c69642056656e646f7220494400000000000000000000000000000081525060200191505060405180910390fd5b60008360040160008481526020019081526020016000209050806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123155780601f106122ea57610100808354040283529160200191612315565b820191906000526020600020905b8154815290600101906020018083116122f857829003601f168201915b505050505091505092915050565b60008260050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116123df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4e6f74206120726567697374657265642076656e646f7200000000000000000081525060200191505060405180910390fd5b600083600401600083815260200190815260200160002090506124106001856001015461216490919063ffffffff16565b84600101819055506000846001015490506124296132a2565b8381600001818152505084816060018190525080866007016000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301908051906020019061248c929190613222565b50905050826000018290806001815401808255809150509060018203906000526020600020016000909192909190915055507ffe5345b00afbb8e30dd35f9905f6d7917ea45ca811cbcdb0de19673accc660fb82866040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561252757808201518184015260208101905061250c565b50505050905090810190601f1680156125545780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1505050505050565b60008060006060600086116125e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c69642050726f64756374204944000000000000000000000000000081525060200191505060405180910390fd5b6000851161265d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c69642050726f64756374204944000000000000000000000000000081525060200191505060405180910390fd5b6000876007016000888152602001908152602001600020905060008160000154116126f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e726567697374657265642070726f6475637400000000000000000000000081525060200191505060405180910390fd5b600081600401600088815260200190815260200160002090508060030160009054906101000a900460ff1661278d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6b6e6f776e206c6963656e7365207370656300000000000000000000000081525060200191505060405180910390fd5b80600001548160010154826002015483600401808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128355780601f1061280a57610100808354040283529160200191612835565b820191906000526020600020905b81548152906001019060200180831161281857829003601f168201915b505050505090509550955095509550505093509350935093565b60008060006060600085116128cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c69642050726f64756374204944000000000000000000000000000081525060200191505060405180910390fd5b60008660070160008781526020019081526020016000209050600081600001541161295f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e726567697374657265642050726f6475637400000000000000000000000081525060200191505060405180910390fd5b80600001548160010154826002015483600301808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a075780601f106129dc57610100808354040283529160200191612a07565b820191906000526020600020905b8154815290600101906020018083116129ea57829003601f168201915b5050505050905094509450945094505092959194509250565b612a2a82336131d4565b15612a9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f56656e646f7220616c726561647920657869737473000000000000000000000081525060200191505060405180910390fd5b612ab56001836000015461216490919063ffffffff16565b826000018190555060008260000154905060405180604001604052806000604051908082528060200260200182016040528015612b015781602001602082028038833980820191505090505b508152602001838152508360040160008381526020019081526020016000206000820151816000019080519060200190612b3c9291906132ca565b506020820151816001019080519060200190612b59929190613222565b50905050808360050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550807f2b3e75d4417af2715688fe83d387844a936fd4aaeb250a3ad15dbefa95ce4f24836040518080602001828103825283818151815260200191508051906020019080838360005b83811015612c06578082015181840152602081019050612beb565b50505050905090810190601f168015612c335780820380516001836020036101000a031916815260200191505b509250505060405180910390a2505050565b6000808411612cbc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e76616c69642050726f64756374204944000000000000000000000000000081525060200191505060405180910390fd5b60008311612d32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642053706563204944000000000000000000000000000000000081525060200191505060405180910390fd5b600085600701600086815260200190815260200160002090506000816000015411612dc5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e726567697374657265642050726f6475637400000000000000000000000081525060200191505060405180910390fd5b600081600401600086815260200190815260200160002090508060030160009054906101000a900460ff16612e62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f556e6b6e6f776e2053706563000000000000000000000000000000000000000081525060200191505060405180910390fd5b600081600001541115612ee95783816000015414612ee8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f496e73756666696369656e74207061796d656e7420666f72206c6963656e736581525060200191505060405180910390fd5b5b612f016001886002015461216490919063ffffffff16565b876002018190555060008760020154905060405180608001604052808881526020018781526020016000846002015411612f3c576000612f54565b612f5384600201544261216490919063ffffffff16565b5b81526020014381525088600601600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050612fb56001846002015461216490919063ffffffff16565b8360020181905550604051806040016040528082815260200160008152508260050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155905050863373ffffffffffffffffffffffffffffffffffffffff167fc17d9be5d9e09d511942c21bf0eda8cc8034a97283edec1f909c8b051b5e014e8884604051808381526020018281526020019250505060405180910390a3809350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061333d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808360050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061326357805160ff1916838001178555613291565b82800160010185558215613291579182015b82811115613290578251825591602001919060010190613275565b5b50905061329e9190613317565b5090565b6040518060800160405280600081526020016000815260200160008152602001606081525090565b828054828255906000526020600020908101928215613306579160200282015b828111156133055782518255916020019190600101906132ea565b5b5090506133139190613317565b5090565b61333991905b8082111561333557600081600090555060010161331d565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734c6963656e736520494420646f65736e2774206d617463682072656769737465726564206174747269627574657320666f72206c6963656e73654d7573742072657175657374206c6f676963207065726d697373696f6e2068617368206265666f726520617474656d7074696e6720746f20766572696679206c6963656e7365a165627a7a7230582018e2693ea10e4453f0de27fbd8e013ed8d5a23044b0689c47400fc2a302c986a0029",
  "sourceMap": "248:2682:0:-;;;511:150;8:9:-1;5:2;;;30:1;27;20:12;5:2;511:150:0;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;511:150:0;;;;;;;;;;;;;;;;560:7;666:10:12;657:6;;:19;;;;;;;;;;;;;;;;;;724:6;;;;;;;;;;;691:40;;720:1;691:40;;;;;;;;;;;;915:11:1;:19;;;;;;;;;;;;914:20;906:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:4;968:11;:19;;;:26;;;;;;;;;;;;;;;;;;1013:7;1004:6;;:16;;;;;;;;;;;;;;;;;;855:172;586:28:0;;;;;;;;;;;;;;;;;;:14;;;:28;;:::i;:::-;624:30;;;;;;;;;;;;;;;;;;:15;;;:30;;:::i;:::-;511:150;248:2682;;783:97;845:28;867:5;845:11;:21;;;;;;:28;;;;:::i;:::-;783:97;:::o;977:99::-;1040:29;1063:5;1040:11;:22;;;;;;:29;;;;:::i;:::-;977:99;:::o;971:488:4:-;1080:31;1094:4;1100:10;1080:13;;;:31;;:::i;:::-;1079:32;1071:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:24;1189:1;1167:4;:17;;;:21;;;;;;:24;;;;:::i;:::-;1147:4;:17;;:44;;;;1201:10;1214:4;:17;;;1201:30;;1260:100;;;;;;;;1322:1;1308:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1308:16:4;;;;1260:100;;;;1344:5;1260:100;;;1241:4;:12;;:16;1254:2;1241:16;;;;;;;;;;;:119;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1408:2;1370:4;:23;;:35;1394:10;1370:35;;;;;;;;;;;;;;;:40;;;;1442:2;1425:27;1446:5;1425:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1425:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:488;;;:::o;2095:564::-;2196:11;2210:4;:23;;:35;2234:10;2210:35;;;;;;;;;;;;;;;;2196:49;;2269:1;2263:3;:7;2255:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2308:31;2342:4;:12;;:17;2355:3;2342:17;;;;;;;;;;;2308:51;;2390:25;2413:1;2390:4;:18;;;:22;;;;;;:25;;;;:::i;:::-;2369:4;:18;;:46;;;;2425:10;2438:4;:18;;;2425:31;;2466;;:::i;:::-;2520:3;2507:1;:10;;:16;;;;;2542:5;2533:1;:6;;:14;;;;2577:1;2557:4;:13;;:17;2571:2;2557:17;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2588:1;:12;;2606:2;2588:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2588:21:4;;;;;;;;;;;;;;;;;;;;;;2624:28;2642:2;2646:5;2624:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2624:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2095:564;;;;;;:::o;8438:167::-;8540:4;8597:1;8563:4;:23;;:31;8587:6;8563:31;;;;;;;;;;;;;;;;:35;8556:42;;8438:167;;;;:::o;834:176:11:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;248:2682:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "248:2682:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1223:365;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1223:365:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1223:365:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1223:365:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1223:365:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1223:365:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1223:365:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2759:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2759:168:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2759:168:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5584:860:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5584:860:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5584:860:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2712:648;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2712:648:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2712:648:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1796:576;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1796:576:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1796:576:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3816:1485;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3816:1485:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3816:1485:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1707:131:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1707:131:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1707:131:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1707:131:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;977:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;977:99:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;977:99:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;977:99:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;977:99:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;977:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;977:99:0;;;;;;;;;;;;;;;:::i;:::-;;2383:210;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2383:210:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2383:210:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2383:210:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:137:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1599:137:12;;;:::i;:::-;;814:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;814:77:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1165:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1165:90:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1994:168:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1994:168:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1994:168:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1994:168:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;783:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;783:97:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;783:97:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;783:97:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;783:97:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;783:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;783:97:0;;;;;;;;;;;;;;;:::i;:::-;;1314:205:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1314:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1885:107:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1885:107:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1885:107:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;1223:365:0;1503:78;1531:10;1543:11;1556:5;1563:6;1571:9;1503:11;:27;;:78;;;;;;;;:::i;:::-;1223:365;;;;;:::o;2759:168::-;2832:7;2841;2850;2859;2885:35;2909:10;2885:11;:23;;:35;;;;:::i;:::-;2878:42;;;;;;;;2759:168;;;;;:::o;5584:860:1:-;5678:7;5718:1;5705:10;:14;5697:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5752:34;5789:11;:20;;:32;5810:10;5789:32;;;;;;;;;;;5752:69;;5855:1;5839:3;:13;;;:17;5831:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5887:32;5922:11;:20;;:35;5943:3;:13;;;5922:35;;;;;;;;;;;5887:70;;5988:1;5975;:10;;;:14;5967:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6024:41;6068:1;:7;;:19;6076:3;:10;;;6068:19;;;;;;;;;;;6024:63;;6105:5;:13;;;;;;;;;;;;6097:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6153:40;6196:5;:15;;:21;6212:4;6196:21;;;;;;;;;;;;;;;6153:64;;6250:10;6235:1;:11;;;:25;6227:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6333:13;6349:1;:19;;;6333:35;;6412:4;6418:10;6430:5;6395:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6395:41:1;;;6385:52;;;;;;6378:59;;;;;;;5584:860;;;;:::o;2712:648::-;2822:4;2838:11;2852:4;:18;;;2871:7;2880:10;2892:7;2852:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2852:48:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2852:48:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2852:48:1;;;;;;;;;;;;;;;;2838:62;;2925:1;2918:3;:8;;2910:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2967:1;2960:3;:8;2957:50;;;2991:5;2984:12;;;;;2957:50;3016:34;3053:11;:20;;:25;3074:3;3053:25;;;;;;;;;;;3016:62;;3113:1;3096:3;:13;;;:18;;3088:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3164:1;3147:3;:13;;;:18;3144:60;;;3188:5;3181:12;;;;;;3144:60;3238:3;3221;:14;;;:20;3213:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3291:3;3274;:14;;;:20;3271:62;;;3317:5;3310:12;;;;;;3271:62;3349:4;3342:11;;;;2712:648;;;;;;:::o;1796:576::-;1903:7;1943:1;1930:10;:14;1922:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1996:1;1986:7;:11;1978:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:32;2062:11;:20;;:32;2083:10;2062:32;;;;;;;;;;;2027:67;;2125:1;2112;:10;;;:14;2104:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:37;2201:1;:7;;:16;2209:7;2201:16;;;;;;;;;;;2161:56;;2235:1;:9;;;;;;;;;;;;2227:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2274:40;2317:1;:11;;:20;2329:7;2317:20;;;;;;;;;;;;;;;2274:63;;2354:1;:11;;;2347:18;;;;;1796:576;;;;;:::o;3816:1485::-;3959:4;4005:1;3992:10;:14;3984:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4040:34;4077:11;:20;;:32;4098:10;4077:32;;;;;;;;;;;4040:69;;4143:1;4127:3;:13;;;:17;4119:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:32;4213:11;:20;;:35;4234:3;:13;;;4213:35;;;;;;;;;;;4178:70;;4279:1;4266;:10;;;:14;4258:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4311:40;4354:1;:7;;:19;4362:3;:10;;;4354:19;;;;;;;;;;;4311:62;;4391:4;:12;;;;;;;;;;;;4383:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4439:43;4485:4;:14;;:23;4500:7;4485:23;;;;;;;;;;;;;;;4439:69;;4543:1;4526:4;:14;;;:18;4518:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4630:14;4647:43;4670:7;4679:10;4647:22;:43::i;:::-;4630:60;;4700:19;:56;;;;;;;;;;;;;;;;;;;4766:12;4781:63;4818:6;4826;4801:32;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4801:32:1;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4801:32:1;;;4791:43;;;;;;4836:1;4839;4842;4781:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4781:63:1;;;;;;;;4766:78;;4870:7;4862:15;;:4;:15;;;4854:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4909:14;4926:6;;;;;;;;;;;:14;;;4941:10;4926:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4926:26:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4926:26:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4926:26:1;;;;;;;;;;;;;;;;4909:43;;4976:4;4966:14;;:6;:14;;;4962:57;;5003:5;4996:12;;;;;;;;;;;;4962:57;5028:32;5063:11;:20;;:32;5084:10;5063:32;;;;;;;;;;;5028:67;;5123:1;5108;:12;;;:16;:38;;;;;5143:3;5128:1;:12;;;:18;5108:38;5105:80;;;5169:5;5162:12;;;;;;;;;;;;;5105:80;5219:29;5246:1;5219:4;:22;;;:26;;:29;;;;:::i;:::-;5194:4;:22;;:54;;;;5290:4;5283:11;;;;;;;;;;;3816:1485;;;;;;;;:::o;1707:131:0:-;1766:13;1798:33;1821:9;1798:11;:22;;:33;;;;:::i;:::-;1791:40;;1707:131;;;:::o;977:99::-;1040:29;1063:5;1040:11;:22;;:29;;;;:::i;:::-;977:99;:::o;2383:210::-;2478:7;2487;2496;2505:13;2537:49;2566:10;2578:7;2537:11;:28;;:49;;;;;:::i;:::-;2530:56;;;;;;;;2383:210;;;;;;;:::o;1599:137:12:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1660:40;;1681:6;;;;;;;;;;;1660:40;;;;;;;;;;;;1727:1;1710:6;;:19;;;;;;;;;;;;;;;;;;1599:137::o;814:77::-;852:7;878:6;;;;;;;;;;;871:13;;814:77;:::o;1165:90::-;1205:4;1242:6;;;;;;;;;;;1228:20;;:10;:20;;;1221:27;;1165:90;:::o;1994:168:0:-;2064:7;2073;2082;2091:13;2123:32;2147:7;2123:11;:23;;:32;;;;:::i;:::-;2116:39;;;;;;;;1994:168;;;;;:::o;783:97::-;845:28;867:5;845:11;:21;;:28;;;;:::i;:::-;783:97;:::o;1314:205:1:-;1408:10;1421:54;1444:10;1456:7;1465:9;1421:11;:22;;:54;;;;;;:::i;:::-;1408:67;;1485:6;;;;;;;;;;;:11;;;1497:10;1509:2;1485:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1485:27:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1485:27:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1485:27:1;;;;;;;;;;;;;;;;;1314:205;;;:::o;1885:107:12:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;3891:1009:4:-;4208:1;4195:10;:14;4187:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4250:31;4264:4;4270:10;4250:13;:31::i;:::-;4242:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4319:11;4333:4;:23;;:35;4357:10;4333:35;;;;;;;;;;;;;;;;4319:49;;4378:35;4416:4;:13;;:25;4430:10;4416:25;;;;;;;;;;;4378:63;;4466:4;:13;;;4459:3;:20;4451:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4529:22;4549:1;4529:4;:15;;;:19;;:22;;;;:::i;:::-;4511:4;:15;;:40;;;;4561:11;4575:4;:15;;;4561:29;;4618:188;;;;;;;;4704:6;4618:188;;;;4672:11;4618:188;;;;4734:9;4618:188;;;;4791:4;4618:188;;;;;;4763:5;4618:188;;;4600:4;:10;;:15;4611:3;4600:15;;;;;;;;;;;:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4850:3;4838:10;4822:71;4855:11;4868:5;4875:6;4883:9;4822:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4822:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3891:1009;;;;;;;;;:::o;7645:598::-;7761:7;7770;7779;7788;7828:1;7815:10;:14;7807:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7862:32;7897:4;:13;;:25;7911:10;7897:25;;;;;;;;;;;7862:60;;7951:1;7940;:8;;;:12;7932:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7985:32;8020:4;:13;;:26;8034:1;:11;;;8020:26;;;;;;;;;;;7985:61;;8056:37;8096:1;:7;;:17;8104:1;:8;;;8096:17;;;;;;;;;;;8056:57;;8131:1;:9;;;;;;;;;;;;8123:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8181:1;:11;;;8194:1;:12;;;8208:1;:12;;;8222:1;:13;;;8173:63;;;;;;;;;;;7645:598;;;;;;;:::o;834:176:11:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1616:267:4:-;1718:13;1763:1;1751:9;:13;1743:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:31;1830:4;:12;;:23;1843:9;1830:23;;;;;;;;;;;1796:57;;1870:1;:6;;1863:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1616:267;;;;:::o;2095:564::-;2196:11;2210:4;:23;;:35;2234:10;2210:35;;;;;;;;;;;;;;;;2196:49;;2269:1;2263:3;:7;2255:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2308:31;2342:4;:12;;:17;2355:3;2342:17;;;;;;;;;;;2308:51;;2390:25;2413:1;2390:4;:18;;;:22;;:25;;;;:::i;:::-;2369:4;:18;;:46;;;;2425:10;2438:4;:18;;;2425:31;;2466;;:::i;:::-;2520:3;2507:1;:10;;:16;;;;;2542:5;2533:1;:6;;:14;;;;2577:1;2557:4;:13;;:17;2571:2;2557:17;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2588:1;:12;;2606:2;2588:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2588:21:4;;;;;;;;;;;;;;;;;;;;;;2624:28;2642:2;2646:5;2624:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2624:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2095:564;;;;;;:::o;5160:643::-;5298:7;5307;5316;5325:13;5415:1;5402:10;:14;5394:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5467:1;5457:7;:11;5449:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5501:32;5536:4;:13;;:25;5550:10;5536:25;;;;;;;;;;;5501:60;;5592:1;5579;:10;;;:14;5571:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5628:37;5668:1;:7;;:16;5676:7;5668:16;;;;;;;;;;;5628:56;;5702:1;:9;;;;;;;;;;;;5694:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5754:1;:7;;;5763:1;:12;;;5777:1;:10;;;5789:1;:6;;5746:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5160:643;;;;;;;:::o;2849:406::-;2962:7;2971;2980;2989:13;3032:1;3022:7;:11;3014:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3066:32;3101:4;:13;;:22;3115:7;3101:22;;;;;;;;;;;3066:57;;3154:1;3141;:10;;;:14;3133:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3198:1;:10;;;3210:1;:12;;;3224:1;:15;;;3241:1;:6;;3190:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:406;;;;;;;:::o;971:488::-;1080:31;1094:4;1100:10;1080:13;:31::i;:::-;1079:32;1071:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:24;1189:1;1167:4;:17;;;:21;;:24;;;;:::i;:::-;1147:4;:17;;:44;;;;1201:10;1214:4;:17;;;1201:30;;1260:100;;;;;;;;1322:1;1308:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1308:16:4;;;;1260:100;;;;1344:5;1260:100;;;1241:4;:12;;:16;1254:2;1241:16;;;;;;;;;;;:119;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1408:2;1370:4;:23;;:35;1394:10;1370:35;;;;;;;;;;;;;;;:40;;;;1442:2;1425:27;1446:5;1425:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1425:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:488;;;:::o;6191:1249::-;6333:7;6373:1;6360:10;:14;6352:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6425:1;6415:7;:11;6407:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6456:35;6494:4;:13;;:25;6508:10;6494:25;;;;;;;;;;;6456:63;;6553:1;6537:4;:13;;;:17;6529:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6590:40;6633:4;:10;;:19;6644:7;6633:19;;;;;;;;;;;6590:62;;6670:4;:12;;;;;;;;;;;;6662:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6725:1;6712:4;:10;;;:14;6709:111;;;6764:8;6750:4;:10;;;:22;6742:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6709:111;6850:25;6873:1;6850:4;:18;;;:22;;:25;;;;:::i;:::-;6829:4;:18;;:46;;;;6885:8;6896:4;:18;;;6885:29;;6945:202;;;;;;;;6993:10;6945:202;;;;7025:7;6945:202;;;;7072:1;7058:4;:13;;;:15;:40;;7097:1;7058:40;;;7074:22;7082:4;:13;;;7074:3;:7;;:22;;;;:::i;:::-;7058:40;6945:202;;;;7124:12;6945:202;;;6924:4;:13;;:18;6938:3;6924:18;;;;;;;;;;;:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7178:25;7201:1;7178:4;:18;;;:22;;:25;;;;:::i;:::-;7157:4;:18;;:46;;;;7243:104;;;;;;;;7299:3;7243:104;;;;7335:1;7243:104;;;7214:4;:14;;:26;7229:10;7214:26;;;;;;;;;;;;;;;:133;;;;;;;;;;;;;;;;;;;7388:10;7376;7362:51;;;7400:7;7409:3;7362:51;;;;;;;;;;;;;;;;;;;;;;;;7430:3;7423:10;;;;;6191:1249;;;;;;:::o;2093:225:12:-;2186:1;2166:22;;:8;:22;;;;2158:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:8;2246:38;;2267:6;;;;;;;;;;;2246:38;;;;;;;;;;;;2303:8;2294:6;;:17;;;;;;;;;;;;;;;;;;2093:225;:::o;8438:167:4:-;8540:4;8597:1;8563:4;:23;;:31;8587:6;8563:31;;;;;;;;;;;;;;;;:35;8556:42;;8438:167;;;;:::o;248:2682:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"../node_modules/@openzeppelin/contracts/ownership/Ownable.sol\";\n\nimport \"./LicenseToken.sol\";\nimport \"./libraries/LicenseStorage.sol\";\nimport \"./libraries/LicenseLogic.sol\";\nimport \"./LicenseManager.sol\";\n\ncontract LicenseMain is Ownable, LicenseManager {\n    using LicenseLogic for LicenseStorage.MainStorage;\n    \n    /**\n     * @dev init initializes the license management contract with an initial root vendor/product\n     * owned by the contract owner.\n     */\n    constructor(LicenseToken _erc721) LicenseManager(_erc721) public {\n        registerVendor(\"RootVendor\");\n        registerProduct(\"RootProduct\");\n    }\n\n    /**\n    * @dev register a new vendor with the contract. Throws if address already registered as vendor.\n     */\n    function registerVendor(string memory _name) public {\n        mainStorage.addVendor(_name);\n    }\n\n    /**\n     * @dev register a new product. Caller must be a valid vendor address.\n     */\n    function registerProduct(string memory _name) public {\n        mainStorage.addProduct(_name);\n    }\n\n    /**\n     * @dev register new license specs for a product. Caller must be a registered vendor\n     * that owns the given product.\n     */\n    function registerLicenseSpecs(uint256 _productID,\n                                  uint256 _attributes,\n                                  string memory _name,\n                                  uint256 _price,\n                                  uint256 _duration) public {\n        mainStorage.addLicenseSpecs(_productID, _attributes, _name, _price, _duration);\n    }\n\n     /**\n     * @dev get the name of a vendor by its id.\n     * @param _vendorId is registered vendor id\n     */\n    function vendorName(uint256 _vendorId) public view returns(string memory) {\n        return mainStorage.vendorName(_vendorId);\n    }\n\n     /**\n     * @dev Get product vendor, spec count, license count, and name registered with the given id\n     * @param _prodID is product id\n     */\n    function productInfo(uint256 _prodID)\n            public view returns(uint256, uint256, uint256, string memory) {\n        return mainStorage.productInfo(_prodID);\n    }\n\n    /**\n     * @dev get license specification information based on its product and spec IDs\n     * @param _productID is the id for the product that owns the spec\n     * @param _specID is the license spec id\n     */\n    function licenseSpecsInfo(uint256 _productID, uint256 _specID)\n            public view returns(uint256, uint256, uint256, string memory) {\n        return mainStorage.licenseSpecsInfo(_productID, _specID);\n    }\n\n    /**\n     * @dev get license product ID, attributes, expiration, and issued block based on its id\n     * @param _licenseID is the license id to query\n    */\n    function licenseInfo(uint256 _licenseID)\n            public view returns(uint256, uint256, uint256, uint256) {\n        return mainStorage.licenseInfo(_licenseID);\n    }\n\n}\n\n",
  "sourcePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/LicenseMain.sol",
  "ast": {
    "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/LicenseMain.sol",
    "exportedSymbols": {
      "LicenseMain": [
        152
      ]
    },
    "id": 153,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 2040,
        "src": "34:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/LicenseToken.sol",
        "file": "./LicenseToken.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 686,
        "src": "107:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/libraries/LicenseStorage.sol",
        "file": "./libraries/LicenseStorage.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 1500,
        "src": "136:40:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/libraries/LicenseLogic.sol",
        "file": "./libraries/LicenseLogic.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 1424,
        "src": "177:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/LicenseManager.sol",
        "file": "./LicenseManager.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 662,
        "src": "216:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2039,
              "src": "272:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2039",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "272:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "LicenseManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 661,
              "src": "281:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LicenseManager_$661",
                "typeString": "contract LicenseManager"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "281:14:0"
          }
        ],
        "contractDependencies": [
          661,
          2039
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 152,
        "linearizedBaseContracts": [
          152,
          661,
          2039
        ],
        "name": "LicenseMain",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13,
            "libraryName": {
              "contractScope": null,
              "id": 11,
              "name": "LicenseLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1423,
              "src": "308:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LicenseLogic_$1423",
                "typeString": "library LicenseLogic"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "302:50:0",
            "typeName": {
              "contractScope": null,
              "id": 12,
              "name": "LicenseStorage.MainStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1498,
              "src": "325:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_MainStorage_$1498_storage_ptr",
                "typeString": "struct LicenseStorage.MainStorage"
              }
            }
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "576:85:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "526f6f7456656e646f72",
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "601:12:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d4eefdec3196493848ec92ccd21a339728a87290b3b91a813e69be72ac0e9f8",
                          "typeString": "literal_string \"RootVendor\""
                        },
                        "value": "RootVendor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0d4eefdec3196493848ec92ccd21a339728a87290b3b91a813e69be72ac0e9f8",
                          "typeString": "literal_string \"RootVendor\""
                        }
                      ],
                      "id": 21,
                      "name": "registerVendor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "586:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "586:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "526f6f7450726f64756374",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "640:13:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffbf9817383bff6bc25e46535b6ae9ffe5e8c27280c8efce7953c3b847fc1357",
                          "typeString": "literal_string \"RootProduct\""
                        },
                        "value": "RootProduct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ffbf9817383bff6bc25e46535b6ae9ffe5e8c27280c8efce7953c3b847fc1357",
                          "typeString": "literal_string \"RootProduct\""
                        }
                      ],
                      "id": 25,
                      "name": "registerProduct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "624:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "624:30:0"
                }
              ]
            },
            "documentation": "@dev init initializes the license management contract with an initial root vendor/product\nowned by the contract owner.",
            "id": 30,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 18,
                    "name": "_erc721",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "560:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicenseToken_$685",
                      "typeString": "contract LicenseToken"
                    }
                  }
                ],
                "id": 19,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17,
                  "name": "LicenseManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 661,
                  "src": "545:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_LicenseManager_$661_$",
                    "typeString": "type(contract LicenseManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "545:23:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "_erc721",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "523:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LicenseToken_$685",
                    "typeString": "contract LicenseToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14,
                    "name": "LicenseToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 685,
                    "src": "523:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicenseToken_$685",
                      "typeString": "contract LicenseToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:22:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:0"
            },
            "scope": 152,
            "src": "511:150:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "835:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "867:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "845:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addVendor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 848,
                      "src": "845:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MainStorage_$1498_storage_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,string memory)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "845:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "845:28:0"
                }
              ]
            },
            "documentation": "@dev register a new vendor with the contract. Throws if address already registered as vendor.",
            "id": 42,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerVendor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "807:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "806:21:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "835:0:0"
            },
            "scope": 152,
            "src": "783:97:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "1030:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1063:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "1040:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addProduct",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 962,
                      "src": "1040:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MainStorage_$1498_storage_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,string memory)"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1040:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:29:0"
                }
              ]
            },
            "documentation": "@dev register a new product. Caller must be a valid vendor address.",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerProduct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "1002:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1001:21:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1030:0:0"
            },
            "scope": 152,
            "src": "977:99:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1493:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "_productID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1531:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "_attributes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1543:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 72,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "1556:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1563:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1571:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "1503:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addLicenseSpecs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1108,
                      "src": "1503:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MainStorage_$1498_storage_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,uint256,uint256,string memory,uint256,uint256)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1503:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1503:78:0"
                }
              ]
            },
            "documentation": "@dev register new license specs for a product. Caller must be a registered vendor\nthat owns the given product.",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerLicenseSpecs",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "name": "_productID",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1253:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "name": "_attributes",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1307:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1362:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1417:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1467:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1252:233:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:0:0"
            },
            "scope": 152,
            "src": "1223:365:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1781:57:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "_vendorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1821:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "1798:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vendorName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 877,
                      "src": "1798:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MainStorage_$1498_storage_ptr_$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,uint256) view returns (string memory)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1798:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 84,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "1791:40:0"
                }
              ]
            },
            "documentation": "@dev get the name of a vendor by its id.\n@param _vendorId is registered vendor id",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vendorName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "_vendorId",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1727:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:19:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1766:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1765:15:0"
            },
            "scope": 152,
            "src": "1707:131:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "2106:56:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "_prodID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "2147:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "2123:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "productInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1012,
                      "src": "2123:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MainStorage_$1498_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,uint256) view returns (uint256,uint256,uint256,string memory)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2123:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,string memory)"
                    }
                  },
                  "functionReturnParameters": 103,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "2116:39:0"
                }
              ]
            },
            "documentation": "@dev Get product vendor, spec count, license count, and name registered with the given id\n@param _prodID is product id",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "productInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "_prodID",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2015:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2014:17:0"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2064:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2073:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2082:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2091:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2063:42:0"
            },
            "scope": 152,
            "src": "1994:168:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "2520:73:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "_productID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2566:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "_specID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "2578:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "2537:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenseSpecsInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1182,
                      "src": "2537:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MainStorage_$1498_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,uint256,uint256) view returns (uint256,uint256,uint256,string memory)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2537:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,string memory)"
                    }
                  },
                  "functionReturnParameters": 124,
                  "id": 130,
                  "nodeType": "Return",
                  "src": "2530:56:0"
                }
              ]
            },
            "documentation": "@dev get license specification information based on its product and spec IDs\n@param _productID is the id for the product that owns the spec\n@param _specID is the license spec id",
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "licenseSpecsInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "name": "_productID",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2409:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2409:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "name": "_specID",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2429:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2429:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2408:37:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2478:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2478:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2487:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2496:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2496:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2505:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2477:42:0"
            },
            "scope": 152,
            "src": "2383:210:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "2868:59:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "_licenseID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2909:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "2885:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenseInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1405,
                      "src": "2885:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MainStorage_$1498_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,uint256) view returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2885:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 144,
                  "id": 149,
                  "nodeType": "Return",
                  "src": "2878:42:0"
                }
              ]
            },
            "documentation": "@dev get license product ID, attributes, expiration, and issued block based on its id\n@param _licenseID is the license id to query",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "licenseInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "name": "_licenseID",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2780:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2780:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2779:20:0"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2832:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2832:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2841:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2841:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2850:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2859:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2859:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2831:36:0"
            },
            "scope": 152,
            "src": "2759:168:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 153,
        "src": "248:2682:0"
      }
    ],
    "src": "0:2932:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/LicenseMain.sol",
    "exportedSymbols": {
      "LicenseMain": [
        152
      ]
    },
    "id": 153,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/node_modules/@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 2040,
        "src": "34:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/LicenseToken.sol",
        "file": "./LicenseToken.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 686,
        "src": "107:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/libraries/LicenseStorage.sol",
        "file": "./libraries/LicenseStorage.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 1500,
        "src": "136:40:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/libraries/LicenseLogic.sol",
        "file": "./libraries/LicenseLogic.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 1424,
        "src": "177:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mdcoon/git/app_license_demo/packages/ald-contracts/contracts/LicenseManager.sol",
        "file": "./LicenseManager.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 662,
        "src": "216:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2039,
              "src": "272:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2039",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "272:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "LicenseManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 661,
              "src": "281:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LicenseManager_$661",
                "typeString": "contract LicenseManager"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "281:14:0"
          }
        ],
        "contractDependencies": [
          661,
          2039
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 152,
        "linearizedBaseContracts": [
          152,
          661,
          2039
        ],
        "name": "LicenseMain",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13,
            "libraryName": {
              "contractScope": null,
              "id": 11,
              "name": "LicenseLogic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1423,
              "src": "308:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LicenseLogic_$1423",
                "typeString": "library LicenseLogic"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "302:50:0",
            "typeName": {
              "contractScope": null,
              "id": 12,
              "name": "LicenseStorage.MainStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1498,
              "src": "325:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_MainStorage_$1498_storage_ptr",
                "typeString": "struct LicenseStorage.MainStorage"
              }
            }
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "576:85:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "526f6f7456656e646f72",
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "601:12:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d4eefdec3196493848ec92ccd21a339728a87290b3b91a813e69be72ac0e9f8",
                          "typeString": "literal_string \"RootVendor\""
                        },
                        "value": "RootVendor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0d4eefdec3196493848ec92ccd21a339728a87290b3b91a813e69be72ac0e9f8",
                          "typeString": "literal_string \"RootVendor\""
                        }
                      ],
                      "id": 21,
                      "name": "registerVendor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "586:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "586:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "526f6f7450726f64756374",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "640:13:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffbf9817383bff6bc25e46535b6ae9ffe5e8c27280c8efce7953c3b847fc1357",
                          "typeString": "literal_string \"RootProduct\""
                        },
                        "value": "RootProduct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ffbf9817383bff6bc25e46535b6ae9ffe5e8c27280c8efce7953c3b847fc1357",
                          "typeString": "literal_string \"RootProduct\""
                        }
                      ],
                      "id": 25,
                      "name": "registerProduct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "624:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "624:30:0"
                }
              ]
            },
            "documentation": "@dev init initializes the license management contract with an initial root vendor/product\nowned by the contract owner.",
            "id": 30,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 18,
                    "name": "_erc721",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "560:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicenseToken_$685",
                      "typeString": "contract LicenseToken"
                    }
                  }
                ],
                "id": 19,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17,
                  "name": "LicenseManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 661,
                  "src": "545:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_LicenseManager_$661_$",
                    "typeString": "type(contract LicenseManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "545:23:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "_erc721",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "523:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LicenseToken_$685",
                    "typeString": "contract LicenseToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 14,
                    "name": "LicenseToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 685,
                    "src": "523:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicenseToken_$685",
                      "typeString": "contract LicenseToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:22:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:0"
            },
            "scope": 152,
            "src": "511:150:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "835:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "867:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "845:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addVendor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 848,
                      "src": "845:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MainStorage_$1498_storage_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,string memory)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "845:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "845:28:0"
                }
              ]
            },
            "documentation": "@dev register a new vendor with the contract. Throws if address already registered as vendor.",
            "id": 42,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerVendor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "807:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "806:21:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "835:0:0"
            },
            "scope": 152,
            "src": "783:97:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "1030:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1063:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "1040:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addProduct",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 962,
                      "src": "1040:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MainStorage_$1498_storage_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,string memory)"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1040:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:29:0"
                }
              ]
            },
            "documentation": "@dev register a new product. Caller must be a valid vendor address.",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerProduct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "1002:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1001:21:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1030:0:0"
            },
            "scope": 152,
            "src": "977:99:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1493:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "_productID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1531:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "_attributes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1543:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 72,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "1556:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1563:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1571:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "1503:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addLicenseSpecs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1108,
                      "src": "1503:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MainStorage_$1498_storage_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,uint256,uint256,string memory,uint256,uint256)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1503:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1503:78:0"
                }
              ]
            },
            "documentation": "@dev register new license specs for a product. Caller must be a registered vendor\nthat owns the given product.",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerLicenseSpecs",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "name": "_productID",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1253:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "name": "_attributes",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1307:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1362:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1417:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1417:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1467:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1252:233:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:0:0"
            },
            "scope": 152,
            "src": "1223:365:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1781:57:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "_vendorId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1821:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "1798:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vendorName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 877,
                      "src": "1798:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MainStorage_$1498_storage_ptr_$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,uint256) view returns (string memory)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1798:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 84,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "1791:40:0"
                }
              ]
            },
            "documentation": "@dev get the name of a vendor by its id.\n@param _vendorId is registered vendor id",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vendorName",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "_vendorId",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1727:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:19:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1766:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1765:15:0"
            },
            "scope": 152,
            "src": "1707:131:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "2106:56:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "_prodID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "2147:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "2123:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "productInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1012,
                      "src": "2123:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MainStorage_$1498_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,uint256) view returns (uint256,uint256,uint256,string memory)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2123:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,string memory)"
                    }
                  },
                  "functionReturnParameters": 103,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "2116:39:0"
                }
              ]
            },
            "documentation": "@dev Get product vendor, spec count, license count, and name registered with the given id\n@param _prodID is product id",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "productInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "_prodID",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2015:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2014:17:0"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2064:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2073:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2082:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2091:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2063:42:0"
            },
            "scope": 152,
            "src": "1994:168:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "2520:73:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "_productID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2566:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "_specID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "2578:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "2537:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenseSpecsInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1182,
                      "src": "2537:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MainStorage_$1498_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,uint256,uint256) view returns (uint256,uint256,uint256,string memory)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2537:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,string memory)"
                    }
                  },
                  "functionReturnParameters": 124,
                  "id": 130,
                  "nodeType": "Return",
                  "src": "2530:56:0"
                }
              ]
            },
            "documentation": "@dev get license specification information based on its product and spec IDs\n@param _productID is the id for the product that owns the spec\n@param _specID is the license spec id",
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "licenseSpecsInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "name": "_productID",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2409:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2409:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "name": "_specID",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2429:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2429:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2408:37:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2478:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2478:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2487:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2496:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2496:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2505:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2477:42:0"
            },
            "scope": 152,
            "src": "2383:210:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "2868:59:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "_licenseID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2909:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 145,
                        "name": "mainStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "2885:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MainStorage_$1498_storage",
                          "typeString": "struct LicenseStorage.MainStorage storage ref"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenseInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1405,
                      "src": "2885:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_MainStorage_$1498_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$bound_to$_t_struct$_MainStorage_$1498_storage_ptr_$",
                        "typeString": "function (struct LicenseStorage.MainStorage storage pointer,uint256) view returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2885:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 144,
                  "id": 149,
                  "nodeType": "Return",
                  "src": "2878:42:0"
                }
              ]
            },
            "documentation": "@dev get license product ID, attributes, expiration, and issued block based on its id\n@param _licenseID is the license id to query",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "licenseInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "name": "_licenseID",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2780:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2780:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2779:20:0"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2832:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2832:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2841:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2841:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2850:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "2859:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2859:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2831:36:0"
            },
            "scope": 152,
            "src": "2759:168:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 153,
        "src": "248:2682:0"
      }
    ],
    "src": "0:2932:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "1565560968654": {
      "events": {},
      "links": {},
      "address": "0xf03A4CD46AecB368e3c9A113DF0e733B59857e22",
      "transactionHash": "0x1db75b25496159eaa1e827c81d459c0c2ea8581875bbddc431415a231c267ab2"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-12T12:30:43.828Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "details": "init initializes the license management contract with an initial root vendor/product owned by the contract owner."
      },
      "findLicenseID(address,uint256,uint256)": {
        "details": "find a license ID held by the given address for the given product and license specification IDs. A non-zero return value indicates the user holds a license for the items, but the license needs to be verified for expiration, etc."
      },
      "generatePermissionHash(address,uint256)": {
        "details": "generatePermissionHash generates a unique hash that must be signed by the given user to verify license ownership.",
        "params": {
          "_licenseID": "is the license id that will be verified",
          "user": "is the user that will sign the returned hash"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "issueLicense(uint256,uint256)": {
        "details": "issue a new license for the caller for the given product based on the given license specification.",
        "params": {
          "_productID": "is the product id for which a license is being issued",
          "_specID": "is the specification for the license being purchased"
        }
      },
      "licenseInfo(uint256)": {
        "details": "get license product ID, attributes, expiration, and issued block based on its id",
        "params": {
          "_licenseID": "is the license id to query"
        }
      },
      "licenseSpecsInfo(uint256,uint256)": {
        "details": "get license specification information based on its product and spec IDs",
        "params": {
          "_productID": "is the id for the product that owns the spec",
          "_specID": "is the license spec id"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "productInfo(uint256)": {
        "details": "Get product vendor, spec count, license count, and name registered with the given id",
        "params": {
          "_prodID": "is product id"
        }
      },
      "registerLicenseSpecs(uint256,uint256,string,uint256,uint256)": {
        "details": "register new license specs for a product. Caller must be a registered vendor that owns the given product."
      },
      "registerProduct(string)": {
        "details": "register a new product. Caller must be a valid vendor address."
      },
      "registerVendor(string)": {
        "details": "register a new vendor with the contract. Throws if address already registered as vendor."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "userHasValidLicense(address,uint256,uint256)": {
        "details": "check whether the given user has a valid license for the given product and specification IDs. NOTE: This does not authenticate the given address and only verifies that the address as an unexpired license for the given IDs. To authenticate user access, use the verifyLicense function instead."
      },
      "vendorName(uint256)": {
        "details": "get the name of a vendor by its id.",
        "params": {
          "_vendorId": "is registered vendor id"
        }
      },
      "verifyLicense(address,uint256,uint8,bytes32,bytes32)": {
        "details": "verify that an address, who signed the given token hash, owns a license for the given product/spec id combination. This will also verify that the license has not expired.",
        "params": {
          "_holder": "is the address to verify which must have also signed the given token",
          "_licenseID": "is the license ID to verify",
          "r": "is part of sig",
          "s": "is part of sig",
          "v": "is part of sig"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}